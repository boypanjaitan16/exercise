[{"/src/src/index.js":"1","/src/src/redux/store.js":"2","/src/src/components/PrivateRoute.js":"3","/src/src/redux/middleware.js":"4","/src/src/pages/auth/index.js":"5","/src/src/redux/reducer/index.js":"6","/src/src/pages/auth/forgotPass.js":"7","/src/src/redux/types.js":"8","/src/src/pages/account/Activities.js":"9","/src/src/pages/account/EditProfile.js":"10","/src/src/pages/account/Profile.js":"11","/src/src/components/PageWrapper.js":"12","/src/src/redux/reducer/error.js":"13","/src/src/pages/account/index.js":"14","/src/src/pages/account/category/List.js":"15","/src/src/pages/account/category/Create.js":"16","/src/src/App.js":"17","/src/src/redux/action/index.js":"18","/src/src/pages/Home.js":"19","/src/src/pages/auth/signIn.js":"20","/src/src/pages/account/AddRecord.js":"21","/src/src/pages/account/category/index.js":"22","/src/src/pages/account/category/Edit.js":"23","/src/src/pages/account/category/Detail.js":"24"},{"size":1669,"mtime":1611628185557,"results":"25","hashOfConfig":"26"},{"size":218,"mtime":1611279182674,"results":"27","hashOfConfig":"26"},{"size":421,"mtime":1611394354910,"results":"28","hashOfConfig":"26"},{"size":108,"mtime":1611279047487,"results":"29","hashOfConfig":"26"},{"size":564,"mtime":1611391204944,"results":"30","hashOfConfig":"26"},{"size":157,"mtime":1611401758603,"results":"31","hashOfConfig":"26"},{"size":2832,"mtime":1611421493393,"results":"32","hashOfConfig":"26"},{"size":89,"mtime":1611277578417,"results":"33","hashOfConfig":"26"},{"size":5201,"mtime":1611737661188,"results":"34","hashOfConfig":"26"},{"size":7135,"mtime":1611583883308,"results":"35","hashOfConfig":"26"},{"size":6191,"mtime":1611709945752,"results":"36","hashOfConfig":"26"},{"size":7382,"mtime":1611737722547,"results":"37","hashOfConfig":"26"},{"size":292,"mtime":1611402272453,"results":"38","hashOfConfig":"26"},{"size":949,"mtime":1611710628472,"results":"39","hashOfConfig":"26"},{"size":5789,"mtime":1611740475796,"results":"40","hashOfConfig":"26"},{"size":2214,"mtime":1611730950883,"results":"41","hashOfConfig":"26"},{"size":636,"mtime":1611402328551,"results":"42","hashOfConfig":"26"},{"size":25,"mtime":1611280441469,"results":"43","hashOfConfig":"26"},{"size":1645,"mtime":1611585170908,"results":"44","hashOfConfig":"26"},{"size":4055,"mtime":1611421437627,"results":"45","hashOfConfig":"26"},{"size":5905,"mtime":1611735446529,"results":"46","hashOfConfig":"26"},{"size":433,"mtime":1611710594287,"results":"47","hashOfConfig":"26"},{"size":217,"mtime":1611739163953,"results":"48","hashOfConfig":"26"},{"size":215,"mtime":1611739163953,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1j4n7q7",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/src/src/index.js",[],["101","102"],"/src/src/redux/store.js",[],"/src/src/components/PrivateRoute.js",[],"/src/src/redux/middleware.js",[],"/src/src/pages/auth/index.js",[],"/src/src/redux/reducer/index.js",[],"/src/src/pages/auth/forgotPass.js",[],["103","104"],"/src/src/redux/types.js",[],"/src/src/pages/account/Activities.js",["105","106"],"/src/src/pages/account/EditProfile.js",["107"],"import React, {useState} from 'react'\nimport {useForm} from 'react-hook-form'\nimport {connect, useDispatch} from 'react-redux'\nimport ImageCropper from 'antd-img-crop'\nimport {useHistory} from 'react-router-dom'\nimport { Upload, message, Button, Tooltip } from 'antd';\nimport {setSession} from '../../redux/action'\nimport {IconButton} from '@material-ui/core'\nimport { PictureOutlined, DeleteOutlined } from '@ant-design/icons';\n\n\nfunction EditProfile({session}){\n\n    const dispatch  = useDispatch()\n    const history   = useHistory()\n    const [loading, setLoading]     = useState(false)\n    const [imageUrl, setImageUrl]   = useState(session.user.avatar)\n    const [fileList, setFileList]   = useState([])\n    const {register, handleSubmit, errors} = useForm()\n\n    const submitForm = (params) => {\n        setLoading(true)\n        const formData = new FormData();\n\n        if(fileList.length > 0){\n            formData.append(\"avatar\", fileList[0])\n        }\n\n        Object.keys(params).map(item => {\n            formData.append(item, params[item])\n        })\n\n        window.axios.post('/profile/update', formData, {\n            headers : {\n                \"Content-Type\": \"multipart/form-data\",\n            }\n        })\n            .then(res => {\n                setLoading(false)\n                const {data}    = res.data\n\n                dispatch(setSession({...session, user: data}))\n                history.push('/account/profile')\n            })\n            .catch(() => setLoading(false))\n    }\n\n    const getBase64 = (img, callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n    \n    const beforeUpload = (file) => {\n        \n        const isJpgOrPng    = file.type === 'image/jpeg' || file.type === 'image/png';\n\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n            return;\n        }\n\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('Image must smaller than 2MB!');\n            return;\n        }\n\n        setFileList([file])\n        getBase64(file, (url) => {\n            setImageUrl(url);\n        })\n\n        return false;\n    }\n\n    const removeAvatar = () => {\n        window.axios.delete('/profile/remove-avatar')\n            .then((res) => {\n                const {data}    = res.data\n                message.success('Avatar picture is deleted')\n                setImageUrl(null)\n                dispatch(setSession({...session, user: data}))\n            })\n    }\n\n    return (\n        <div className='w-full'>\n            <form onSubmit={handleSubmit(submitForm)} className='flex flex-col space-y-4'>\n                <div>\n                    <label>Avatar</label>\n                    <div className='flex items-center space-x-3'>\n                        <div style={{ width: 105}}>\n                            <ImageCropper\n                                rotate\n                                grid>\n                                <Upload\n                                    name=\"avatar\"\n                                    fileList={fileList}\n                                    listType=\"picture-card\"\n                                    className=\"avatar-uploader mt-1\"\n                                    showUploadList={false}\n                                    beforeUpload={beforeUpload}\n                                >\n                                    {imageUrl ? (\n                                        <div className='w-full relative'>\n                                            <img src={imageUrl} alt=\"avatar\" className='w-full'/>\n                                            <div className='absolute inset-0 bg-black bg-opacity-40 text-white flex items-center justify-center flex-col'>\n                                                <PictureOutlined/>\n                                                <small className='mt-2'>Change</small>\n                                            </div>\n                                        </div>\n                                    ): (\n                                        <div className='flex flex-col items-center justify-center'>\n                                            <PictureOutlined/>\n                                            <small className='mt-2'>Choose</small>\n                                        </div>\n                                    )}\n                                </Upload>\n                            </ImageCropper>\n                        </div>\n                        {session.user.avatar && (\n                            <Tooltip placement='right' title='Remove avatar picture'>\n                                <IconButton onClick={removeAvatar} type='button' className='focus:outline-none'>\n                                    <DeleteOutlined/>\n                                </IconButton>\n                            </Tooltip>\n                        )}\n                        \n                    </div>\n                </div>\n                <div>\n                    <label htmlFor='name' className='text-sm'>Name</label>\n                    <input \n                        id='name'\n                        type='text'\n                        name='name'\n                        defaultValue={session.user.name}\n                        ref={\n                            register({\n                                required    : 'Name cannot be empty'\n                            })\n                        }\n                        className={`a-input-text ${errors.name && 'border-red-500'}`}/>\n                    {errors.name && (<small className='text-red-500'>{errors.name.message}</small>)}\n                </div>\n\n                <div>\n                    <label htmlFor='email' className='text-sm'>Email</label>\n                    <input \n                        id='email'\n                        type='text'\n                        defaultValue={session.user.email}\n                        name='email'\n                        ref={\n                            register({\n                                required    : 'Email cannot be empty',\n                                pattern: {\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                    message: \"Invalid email address\"\n                                }\n                            })\n                        }\n                        className={`a-input-text ${errors.email && 'border-red-500'}`}/>\n                    {errors.email && (<small className='text-red-500'>{errors.email.message}</small>)}\n                </div>\n                <div>\n                    <Button loading={loading} htmlType='submit' type='primary' size='large' shape='round'>\n                        Save Changes\n                    </Button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        session    : state.session\n    }\n}\n\nexport default connect(mapStateToProps)(EditProfile)","/src/src/pages/account/Profile.js",[],"/src/src/components/PageWrapper.js",[],"/src/src/redux/reducer/error.js",[],"/src/src/pages/account/index.js",[],"/src/src/pages/account/category/List.js",[],"/src/src/pages/account/category/Create.js",[],"/src/src/App.js",[],"/src/src/redux/action/index.js",[],"/src/src/pages/Home.js",[],"/src/src/pages/auth/signIn.js",[],"/src/src/pages/account/AddRecord.js",["108","109"],"/src/src/pages/account/category/index.js",[],"/src/src/pages/account/category/Edit.js",[],"/src/src/pages/account/category/Detail.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":7,"column":9,"nodeType":"118","messageId":"119","endLine":7,"endColumn":28},{"ruleId":"116","severity":1,"message":"120","line":13,"column":11,"nodeType":"118","messageId":"119","endLine":13,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":29,"column":38,"nodeType":"123","messageId":"124","endLine":29,"endColumn":40},{"ruleId":"116","severity":1,"message":"125","line":32,"column":11,"nodeType":"118","messageId":"119","endLine":32,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":66,"column":8,"nodeType":"128","endLine":66,"endColumn":10,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],["130"],["131"],"no-unused-vars","'ClockCircleOutlined' is defined but never used.","Identifier","unusedVar","'parseToTime' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'onSelectChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array. You can also do a functional update 'setCategories(c => ...)' if you only need 'categories' in the 'setCategories' call.","ArrayExpression",["132"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [categories]",{"range":"135","text":"136"},[2003,2005],"[categories]"]